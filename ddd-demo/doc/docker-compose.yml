version: '3'
services:
  zookeeper:
    container_name: zookeeper_dev
    image: zookeeper:3.5.5
    restart: always
    hostname: zookeeper
    ports:
      - 2181:2181
    volumes:
      - "/etc/localtime:/etc/localtime"
      - "/Users/yxk/docker/zookeeper/data:/data"
      - "/Users/yxk/docker/zookeeper/log:/var/log/zookeeper"
  kafka:
    container_name: kafka_dev
    image: wurstmeister/kafka:2.12-2.2.1
    hostname: kafka
    # 配置参数见：https://hub.docker.com/r/wurstmeister/kafka
    restart: always
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
#      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092                                      # 端口
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://10.203.8.28:9092  #配置宿主机ip或容器和宿主机都能识别的ip ，这个配置是kafka发布到zk上的，供外部使用，默认使用容器的id，容器id和容器的ip会在hosts里做映射
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092            # 全网监听，定义kafka的服务监听
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "zipkin:1:1,zipkin.log.info:1:1,zipkin.log.warn:1:1,zipkin.log.error:1:1"
      KAFKA_MESSAGE_MAX_BYTES: 6000000
      KAFKA_REPLICA_FETCH_MAX_BYTES: 6000000
      KAFKA_GROUP_MAX_SESSION_TIMEOUT_MS: 60000
      KAFKA_NUM_PARTITIONS: 2
    volumes:
      - "/etc/localtime:/etc/localtime"
#      - "/Users/yxk/docker/kafka/docker.sock:/var/run/docker.sock"
#      - "/Users/yxk/docker/kafka/data:/kafka"   # kafka数据
#      - "/Users/yxk/docker/kafka/logs:/tmp/kafka-logs"
    depends_on:
      - zookeeper
  kafka-manager:
    container_name: kafka_manager_dev
    image: sheepkiller/kafka-manager
    restart: always
    links:
      - zookeeper
      - kafka
    environment:
      ZK_HOSTS: zookeeper:2181
      APPLICATION_SECRET: "yxkong"
      KAFKA_MANAGER_AUTH_ENABLED: "true"  # 开启kafka-manager权限校验
      KAFKA_MANAGER_USERNAME: 5ycode       # 登陆账户
      KAFKA_MANAGER_PASSWORD: yxkong      # 登陆密码
      KM_ARGS: -Djava.net.preferIPv4Stack=true
    ports:
      - 9000:9000
    depends_on:
      - zookeeper
    volumes:
      - "/etc/localtime:/etc/localtime"
  redis:
    container_name: redis_dev
    image: redis
    restart: always
    command: redis-server /etc/redis/redis.conf --requirepass 123456 --appendonly yes
    environment:
      TZ: Asia/Shanghai
      LANG: en_US.UTF-8
    volumes:
      - "/etc/localtime:/etc/localtime"
      - "/Users/yxk/docker/redis/data:/data"
      - "/Users/yxk/docker/redis/redis.conf:/etc/redis/redis.conf"
    ports:
      - 6379:6379
  mysql:
    container_name: mysql_dev
    image: "mysql:5.7"
#    hostname: yxkong
    # https://hub.docker.com/_/mysql?tab=description
    environment:
      TZ: Asia/Shanghai
      LANG: en_US.UTF-8
      MYSQL_ROOT_PASSWORD: "123456" # root密码
#      MYSQL_USER: 'yxkong'  # 新增超级用户（直接访问MYSQL_DATABASE）
#      MYSQL_PASS: '123456'  # 新增超级用户的密码
      MYSQL_DATABASE: demo  # 初始化的数据库名称,只能填写一个，多张库表的创建可以放到sql文件中
    restart: always
    ports:
      - 3306:3306
    volumes:
      - "/etc/localtime:/etc/localtime"
      - "/Users/yxk/docker/mysql/my.cnf:/etc/mysql/my.cnf"
      - "/Users/yxk/docker/mysql/data:/var/lib/mysql"
      - "/Users/yxk/docker/mysql/log/error.log:/var/log/mysql/error.log"
      - "/Users/yxk/docker/mysql/init:/docker-entrypoint-initdb.d/"
#  nacos:
#    container_name: nacos_dev
#    image: "nacos/nacos-server:v2.0.3"
#    #    env_file:
#    #      - ../nacos/nacos-standlone-mysql.env
#    environment:
#      - "/etc/localtime:/etc/localtime"
#      - PREFER_HOST_MODE=hostname                 # 如果支持主机名可以使用hostname,否则使用ip，默认也是ip
#      - MODE=standalone                           # 单机模式启动
##      - SPRING_DATASOURCE_PLATFORM=mysql          # 数据源平台 仅支持mysql或不保存empty
#      # TODO 修改mysql连接信息
#      - MYSQL_SERVICE_HOST=127.0.0.1    # 注：这里不能为`127.0.0.1`或`localhost`方式！！！
#      - MYSQL_SERVICE_DB_NAME=nacos
#      - MYSQL_SERVICE_PORT=3306
#      - MYSQL_SERVICE_USER=root
#      - MYSQL_SERVICE_PASSWORD=123456
#      - MYSQL_SERVICE_DB_PARAM=characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&useSSL=false
#      # TODO 修改JVM调优参数
#      - JVM_XMS=128m   #-Xms default :2g
#      - JVM_XMX=128m   #-Xmx default :2g
#      - JVM_XMN=64m    #-Xmn default :1g
#      - JVM_MS=32m     #-XX:MetaspaceSize default :128m
#      - JVM_MMS=32m    #-XX:MaxMetaspaceSize default :320m
#      - NACOS_DEBUG=n  #是否开启远程debug，y/n，默认n
#      - TOMCAT_ACCESSLOG_ENABLED=false #是否开始tomcat访问日志的记录，默认false
#    restart: always
#    ports:
#      - "8848:8848"
#      - "9848:9848"
#      - "9555:9555"
#    volumes:
#      - "./logs:/home/nacos/logs/"
#      - "./custom.properties:/home/nacos/init.d/custom.properties"
#      - "./nacos/application.properties:/home/nacos/conf/application.properties"
#    depends_on:
#      - mysql
  eureka-server:
    image: 5ycode/eureka:0.1
    container_name: eureka-server_dev
    restart: always
    environment:
      - "/etc/localtime:/etc/localtime"
      - JVM_XMS=312m
      - JVM_XMX=312m
      - REMOTE_DEBUG=y
    ports:
      - "8765:8765"
    volumes:
      - ./logs/eureka-server:/logs