<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.12.RELEASE</version>
        <relativePath/>
    </parent>
    <groupId>com.yxkong</groupId>
    <artifactId>ddd-parent</artifactId>
    <packaging>pom</packaging>
    <version>0.1</version>
    <!--上传pom文件，要移除-->
    <modules>
        <module>ddd-code-generator</module>
        <module>ddd-common</module>
        <module>eureka-server</module>
    </modules>
    <properties>
        <argLine>-Dfile.encoding=UTF-8</argLine>
        <java.version>1.8</java.version>
        <spring-boot-admin.version>2.2.3</spring-boot-admin.version>
        <spring-cloud.version>Hoxton.SR11</spring-cloud.version>
        <disruptor.version>3.4.2</disruptor.version>
        <junit.version>5.7.2</junit.version>
        <lombok.version>1.18.20</lombok.version>
        <mybatis.version>3.5.5</mybatis.version>
        <mybatis.starter.version>2.1.3</mybatis.starter.version>
        <mysql.version>8.0.20</mysql.version>
        <druid.version>1.1.22</druid.version>
        <freemarker.version>2.3.31</freemarker.version>
        <springfox.version>3.0.0</springfox.version>
        <jackson.version>2.11.4</jackson.version>
        <commons-lang3.version>3.10</commons-lang3.version>
        <kafka.version>2.5.1</kafka.version>
        <redisson.starter.version>3.13.2</redisson.starter.version>
        <apollo.version>1.8.0</apollo.version>
        <alibaba.sentinel.starter.version>2.2.6.RELEASE</alibaba.sentinel.starter.version>
        <alibaba.nacos.starter.version>2.2.6.RELEASE</alibaba.nacos.starter.version>
        <ddd.parent.version>0.1</ddd.parent.version>
        <yxkong.ddd.common.version>0.1</yxkong.ddd.common.version>
        <yxkong.ddd.code.generator.version>0.2</yxkong.ddd.code.generator.version>
        <mapstruct.version>1.4.2.Final</mapstruct.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!--导入依赖的pom文件-->
            <!--顺序靠前，先被引入-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-dependencies</artifactId>
                <version>${spring-boot-admin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson-spring-boot-starter</artifactId>
                <version>${redisson.starter.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-boot-starter</artifactId>
                <version>${springfox.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <dependency>
                <groupId>com.lmax</groupId>
                <artifactId>disruptor</artifactId>
                <version>${disruptor.version}</version>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis.starter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${mybatis.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>com.ctrip.framework.apollo</groupId>
                <artifactId>apollo-client</artifactId>
                <version>${apollo.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-sentinel</artifactId>
                <version>${alibaba.sentinel.starter.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
                <version>${alibaba.nacos.starter.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
                <version>${alibaba.nacos.starter.version}</version>
            </dependency>
            <dependency>
                <groupId>com.yxkong</groupId>
                <artifactId>ddd-common</artifactId>
                <version>${yxkong.ddd.common.version}</version>
            </dependency>
            <dependency>
                <groupId>com.yxkong</groupId>
                <artifactId>ddd-code-generator</artifactId>
                <version>${yxkong.ddd.code.generator.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- 配置远程仓库 -->
    <distributionManagement>
        <repository>
            <id>aliyun</id>
            <url>https://maven.aliyun.com/nexus/content/groups/public/</url>
        </repository>
    </distributionManagement>
    <repositories>
        <repository>
            <id>aliyun-public</id>
            <name>aliyun-public</name>
            <url>https://maven.aliyun.com/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <build>
        <defaultGoal>compile</defaultGoal>
        <finalName>${project.artifactId}-${project.version}</finalName>
        <plugins>
            <!-- 编译插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <!--屏蔽test-->
                    <skip>true</skip>
                    <!--传递额外的编译参数-->
                    <compilerArgs>
                        <arg>-verbose</arg>
<!--                        <arg>-Xlint:all,-options,-path</arg>-->
                        <arg>-Xlint:unchecked</arg>
                        <arg>-Xlint:deprecation</arg>
                        <!--添加一些jar，让bootstrap ClassLoader加载-->
<!--                        <arg>-Xbootclasspath:${java.home}/lib/rt.jar${path.separator}${java.home}/lib/jce.jar</arg>-->
                        <!--解决本地jar包依赖问题-->
<!--                        <arg>-Xextdirs:${basedir}\lib</arg>-->
                    </compilerArgs>
                </configuration>
            </plugin>
            <!-- 跳过单元测试-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
            <!--打源码包-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
