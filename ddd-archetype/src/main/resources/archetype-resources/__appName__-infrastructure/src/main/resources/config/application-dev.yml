#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
#set( $symbol_left = '{' )
#set( $symbol_right = '}' )
logging:
  config: classpath:log4j2/log4j2-dev.xml
  level:
    root: info
    ${package}.infrastructure.persistence.mapper.*: debug
spring:
  redis:
    host: 10.255.200.214
    password: 123456
    port: 6379
    timeout: 2000
    lettuce:
      pool:
        max-active: 10 # 连接池最大连接数（使用负值表示没有限制）
        max-idle: 5 # 连接池中的最大空闲连接
        min-idle: 2 # 连接池中的最小空闲连接
        max-wait: 1000 # 连接池最大阻塞等待时间（使用负值表示没有限制）
  kafka:
    biz:
      enabled: true
    bootstrap-servers: 10.255.200.214:9092
    biz-bootstrap-servers: 10.255.200.214:9092
    consumer:
      group-id: ${symbol_dollar}${symbol_left}spring.application.name${symbol_right}
      enable-auto-commit: true
      auto-commit-interval: 100
      auto-offset-reset: earliest  #latest
      max-poll-records: 100
    producer:
      client-id: ${symbol_dollar}${symbol_left}spring.application.name${symbol_right}
      retries: 3
      batch-size: 1048576
      buffer-memory: 6291456
      acks: all
      compression-type: gzip
    listener:
      concurrency: 1
  sleuth:
    sampler:
      probability: 1.0
  zipkin:
    compression:
      enabled: true
    sender:
      type: kafka
    message-timeout: 60
    service:
      name: ${symbol_dollar}${symbol_left}spring.application.name${symbol_right}

#mysql数据库配置
datasource:
  ${appName}:
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.161.219:3308/wk_db_user?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&serverTimezone=GMT%2B8
    username: wk_db_rw
    password: J@FgbH5_i8hQ
    filters: stat
    maxActive: 10
    initialSize: 1
    maxWait: 60000
    minIdle: 1
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxOpenPreparedStatements: 20
  x${appName}:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.161.219:3308/wk_x_user?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&serverTimezone=GMT%2B8
    username: xxk_loan_user
    password: qn2o3udV3n
    filters: stat
    maxActive: 10
    initialSize: 1
    maxWait: 60000
    minIdle: 1
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxOpenPreparedStatements: 20


eureka:
  server:
    #当Eureka Server节点在短时间内丢失过多的客户端时（可能发送了网络故障），那么这个节点将进入自我保护模式，不再注销任何微服务，当网络故障回复后，该节点会自动退出自我保护模式
    enable-self-preservation: false
    #清理间隔,没有及时下线，利用这个比较好（单位毫秒，默认是60*1000）
    evictionIntervalTimerInMs: 2000
  client:
    #    register-with-eureka: true
    #    fetch-registry: false
    healthcheck:
      #开启健康检查
      enabled: true
    service-url:
      defaultZone: http://10.255.200.214:8765/eureka/
  instance:
#    hostname: ${symbol_dollar}\{spring.${appName}application.name\}
    #指定本节点的IP
    #ip-address: 127.0.0.1
    #表示使用IP进行配置
    prefer-ip-address: true
    instance-id: ${symbol_dollar}${symbol_left}spring.cloud.client.ip-address${symbol_right}:${symbol_dollar}${symbol_left}server.port${symbol_right}
    #租期更新时间间隔（默认30秒）
    lease-renewal-interval-in-seconds: 10
    #租期到期时间（默认90秒）
    lease-expiration-duration-in-seconds: 10
    metadata-map:
      user:
        name: admin
        password: 9fbank

onecard:
  id-worker:
    cluster: 127.0.0.1
  druid:
    monitor:
      login-username: onecard
      login-password: onecard123$
      allow: 111.200.243.194,106.38.54.130,127.0.0.1
apollo:
  cacheDir: /opt/data/                       #配置本地配置缓存目录
  cluster: default                           #指定使用哪个集群的配置
  meta: http://192.168.192.24:8080    #DEV环境配置中心地址
  autoUpdateInjectedSpringProperties: true   #是否开启 Spring 参数自动更新
  bootstrap:
    enabled: false                            #是否开启 Apollo
    namespaces: ${appName}Application                  #设置 Namespace
    eagerLoad:
      enabled: false                         #将 Apollo 加载提到初始化日志系统之前
