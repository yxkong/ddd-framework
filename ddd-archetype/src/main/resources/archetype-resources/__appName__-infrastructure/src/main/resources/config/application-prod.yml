#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
server:
  port: 8080
logging:
  config: classpath:log4j2/log4j2-prod.xml
  level:
    root: info
    ${package}.infrastructure.persistence.mapper.*: info
${symbol_pound} 生产关闭
swagger:
  show: false
spring:
  redis:
    host: xxxx
    password: xx
    port: 6379
    timeout: 3000
    lettuce:
      pool:
        max-active: 200 ${symbol_pound} 连接池最大连接数（使用负值表示没有限制）
        max-idle: 50 ${symbol_pound} 连接池中的最大空闲连接
        min-idle: 50 ${symbol_pound} 连接池中的最小空闲连接
        max-wait: 500 ${symbol_pound} 连接池最大阻塞等待时间（使用负值表示没有限制）
  kafka:
    biz:
      enabled: true
    bootstrap-servers: 172.20.134.6:9092,172.20.134.7:9092,172.19.134.6:9092
    biz-bootstrap-servers: 172.20.134.8:9092,172.20.134.9:9092,172.19.134.8:9092
    consumer:
      group-id: ${symbol_dollar}{spring.application.name}
      enable-auto-commit: true
      auto-commit-interval: 10000
      auto-offset-reset: latest  ${symbol_pound}latest
      max-poll-records: 100
    producer:
      client-id: ${symbol_dollar}{spring.application.name}
      retries: 3
      batch-size: 1048576
      buffer-memory: 6291456
      acks: all
      compression-type: gzip
    listener:
      concurrency: 1
  sleuth:
    sampler:
      probability: ${version}
  zipkin:
    compression:
      enabled: true
    sender:
      type: kafka
    message-timeout: 60
    service:
      name: ${symbol_dollar}{spring.application.name}

${symbol_pound}数据库配置
datasource:
  member:
    ${symbol_pound} 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/db_ddd?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&serverTimezone=GMT%2B8
    username: root
    password: 123456
    initialSize: 50
    minIdle: 50
    maxActive: 200
    maxWait: 5000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    filters: stat
    connectionProperties: druid.stat.mergeSql:true;druid.stat.slowSqlMillis:5000
    useGlobalDataSourceStat: true
  x:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/xdb_ddd?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&serverTimezone=GMT%2B8
    username: root
    password: 123456
    initialSize: 50
    minIdle: 50
    maxActive: 200
    maxWait: 5000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    filters: stat
    connectionProperties: druid.stat.mergeSql:true;druid.stat.slowSqlMillis:5000
    useGlobalDataSourceStat: true
eureka:
  server:
    ${symbol_pound}当Eureka Server节点在短时间内丢失过多的客户端时（可能发送了网络故障），那么这个节点将进入自我保护模式，不再注销任何微服务，当网络故障回复后，该节点会自动退出自我保护模式
    enable-self-preservation: false
    ${symbol_pound}清理间隔,没有及时下线，利用这个比较好（单位毫秒，默认是60*1000）
    evictionIntervalTimerInMs: 2000
  client:
    ${symbol_pound}    register-with-eureka: true
    ${symbol_pound}    fetch-registry: false
    healthcheck:
      ${symbol_pound}开启健康检查
      enabled: true
    service-url:
      defaultZone: http://eureka-prod-one.5ycode.com/eureka/,http://eureka-prod-two.5ycode.com/eureka/
  instance:
    ${symbol_pound}    hostname: ${symbol_dollar}{spring.application.name}
    ${symbol_pound}指定本节点的IP
    ${symbol_pound}ip-address: 127.0.0.1
    ${symbol_pound}表示使用IP进行配置
    prefer-ip-address: true
    instance-id: ${symbol_dollar}{spring.cloud.client.ip-address}:${symbol_dollar}{server.port}
    ${symbol_pound}租期更新时间间隔（默认30秒）
    lease-renewal-interval-in-seconds: 10
    ${symbol_pound}租期到期时间（默认90秒）
    lease-expiration-duration-in-seconds: 10
    metadata-map:
      user:
        name: admin
        password: 5ycode

feign:
  client:
    config:
      default:
        ${symbol_pound} 考虑有外网的原因，允许建立连接的时间略长
        connectTimeout: 1000
        readTimeout: 3000
        loggerLevel: basic
      ${symbol_pound} 设置欧飞的超时时间
      OFPAY-SERVEICE:
        connectTimeout: 1000
        readTimeout: 10000
        loggerLevel: basic
ddd:
  id-worker:
    cluster: 172.28.24.54,172.29.24.31
${symbol_pound}apollo:
${symbol_pound}  cacheDir: /opt/data/                       ${symbol_pound}配置本地配置缓存目录
${symbol_pound}  cluster: default                           ${symbol_pound}指定使用哪个集群的配置
${symbol_pound}  meta: http://inner-apollo.5ycode.com    ${symbol_pound}生产环境配置中心地址
${symbol_pound}  autoUpdateInjectedSpringProperties: true   ${symbol_pound}是否开启 Spring 参数自动更新
${symbol_pound}  bootstrap:
${symbol_pound}    enabled: false                            ${symbol_pound}是否开启 Apollo
${symbol_pound}    namespaces: application                  ${symbol_pound}设置 Namespace
${symbol_pound}    eagerLoad:
${symbol_pound}      enabled: false                         ${symbol_pound}将 Apollo 加载提到初始化日志系统之前s
